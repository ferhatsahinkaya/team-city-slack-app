/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package teamcity.slack.app

import java.net.ConnectException
import java.net.HttpURLConnection
import java.net.URL
import java.time.Duration
import java.util.concurrent.TimeUnit
import kotlin.test.Test

class AppTest {

    @Test
    fun serverIsUpAndRunning() {
        main(emptyArray())
        waitUntil({ serverIsUp() }, Duration.ofSeconds(2), Duration.ofMillis(200))
    }

    private fun waitUntil(serverIsUp: () -> Boolean, timeout: Duration, retry: Duration) {
        var timeLeft = timeout
        while (!timeLeft.isNegative && !serverIsUp()) {
            timeLeft = timeLeft.minus(retry)
            TimeUnit.MILLISECONDS.sleep(retry.toMillis())
        }
        if (timeout.isNegative) throw IllegalStateException("Cannot start server!")
    }

    // TODO Use http client
    private fun serverIsUp(): Boolean {
        return try {
            val con = URL("http://localhost:4567/ready").openConnection() as HttpURLConnection
            con.responseCode == 200
        } catch (e: ConnectException) {
            false
        }
    }
}
